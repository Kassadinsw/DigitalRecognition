#!usr/bin/env python3
# -*- coding:utf-8 -*-

"""A digital meter recogniton program"""

__author__ = "huzhenhong@2019-11-26"

import cv2 as cv
import numpy as np
import base_function as bf
import extract_roi


if __name__ == '__main__':
    src_img = cv.imread('DigitalMeter.jpg')
    if src_img is not None:
        bf.cv_show('src_img', src_img)

        resized_img =  bf.cv_resize(src_img, width=500)

        # num_imgs, decimal_point_index = extract_roi.get_nums_by_color(resized_img)
        num_imgs, decimal_point_index = extract_roi.get_nums_by_contour(resized_img)
        print('decimal_point_index:{}'.format(decimal_point_index))

        result = ''
        svm = cv.ml.SVM_load('svm_data.dat')

        if num_imgs is not None:
            for i, num_img in enumerate(num_imgs):
                bf.cv_show('num_img_' + str(i + 1), num_img)
                cv.imwrite('num_img_' + str(i + 1) + '.jpg', num_img)

                img = np.array(num_img, dtype='float32').reshape(-1, 128 * 64)
                _, y_pred = svm.predict(img)
                result += str(int(y_pred[0][0]))

            result = float(result) / (10 ** decimal_point_index)
            print(result)




        cv.waitKey(0)
        cv.destroyAllWindows()